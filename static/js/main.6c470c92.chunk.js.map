{"version":3,"sources":["logo.svg","components/RaidBossCalculator/RaidBossCalculator.jsx","components/Wrapper/Wrapper.jsx","App.js","reportWebVitals.js","index.js"],"names":["RaidBossCalculator","bossName","killedAt","useState","respFrom","setRespFrom","respTo","setRespTo","isRespIsComing","setIsRespIsComing","useEffect","addHours","Date","now","console","log","intl","Intl","DateTimeFormat","month","day","hour","minute","second","hour12","className","format","Wrapper","setRss","bossInfo","setBossInfo","bossIds","id","name","url","a","read","feed","filterFeed","getFeed","entries","rx","RegExp","map","v","join","bosses","filter","x","test","link","forEach","boss","split","find","published","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.6c470c92.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport addHours from \"date-fns/addHours\";\r\n\r\nimport './RaidBossCalculator.scss'\r\nconst RaidBossCalculator = ({\r\n    bossName,\r\n    killedAt\r\n})=>{\r\n\r\n    const [respFrom, setRespFrom] = useState('')\r\n    const [respTo, setRespTo] = useState('')\r\n    const [isRespIsComing, setIsRespIsComing] = useState(false)\r\n    useEffect(()=>{\r\n        setRespFrom(addHours(new Date(killedAt), 18))\r\n        setRespTo(addHours(new Date(killedAt), 30))\r\n        const now = new Date()\r\n        console.log('now ', now)\r\n        console.log('From ', respFrom, now>respFrom)\r\n        console.log('To ', respTo, now<respTo)\r\n        console.log('respStatus:: ', now>=respFrom && now<=respTo)\r\n        setIsRespIsComing(now>respFrom && now<respTo)\r\n    }, [killedAt])\r\n    const intl = new Intl.DateTimeFormat('RU-ru', {\r\n        month: 'long', \r\n        day: 'numeric', \r\n        hour: 'numeric', \r\n        minute: 'numeric', \r\n        second: 'numeric',\r\n        hour12: false\r\n    })\r\n   \r\n    return (\r\n        <div className={`calculator__container ${isRespIsComing?'active':''} `}>\r\n            <h2 className=\"boss__name\">{bossName}</h2>\r\n            <div className={`boss__info `}>\r\n                <span>Убит: {intl.format(new Date(killedAt))}</span>\r\n                <span>Начало респа: {intl.format(respFrom)}</span> \r\n                <span>Конец респа: {intl.format(respTo)}</span>\r\n               \r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RaidBossCalculator","import React, { useEffect, useState } from \"react\";\r\nimport RaidBossCalculator from \"../RaidBossCalculator/RaidBossCalculator\";\r\nimport { read } from 'feed-reader'\r\nimport './Wrapper.scss'\r\nconst Wrapper = () => {\r\n\r\n    const [rss, setRss] = useState('');\r\n    const [bossInfo, setBossInfo] = useState([]);\r\n    const bossIds = [\r\n        {\r\n            id: '4195',\r\n            name: 'Golkonda'\r\n        },\r\n        {\r\n            id: '4192',\r\n            name: 'Hallate'\r\n        },\r\n        {\r\n            id: '4186',\r\n            name: 'Kernon'\r\n        },\r\n        {\r\n            id: '4179',\r\n            name: 'Cabrio'\r\n        },\r\n    ]\r\n    useEffect(() => {\r\n        const url = ' https://lit-badlands-25495.herokuapp.com/https://asterios.tm/index.php?cmd=rss&serv=3&filter=all&out=xml'\r\n        async function getFeed(url){\r\n            let feed = await read(url)\r\n            console.log(feed)\r\n           setRss(feed)\r\n           filterFeed(feed,bossIds)\r\n        }\r\n        getFeed(url)  \r\n    }, [])\r\n\r\n    const filterFeed = (feed, bossIds) => {\r\n        console.log('filtering feed')\r\n        const { entries } = feed\r\n        \r\n        var rx =  new RegExp(bossIds.map(v => v.id).join('|'))\r\n        let bosses = entries.filter(\r\n            x => {\r\n                return rx.test(x.link)\r\n            })\r\n        bosses.forEach(boss=>{\r\n            boss.id = boss.link.split('id=')[1]\r\n            boss.name = bossIds.find(x=>x.id==boss.id).name\r\n        })\r\n        console.log(bosses)\r\n        setBossInfo(bosses)\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n\r\n        {\r\n            bossInfo.map(boss=>\r\n                (\r\n                    <RaidBossCalculator bossName={boss.name} killedAt={boss.published} className=\"calc\"/>\r\n                )\r\n        )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wrapper","import logo from './logo.svg';\nimport './App.scss';\nimport Wrapper from './components/Wrapper/Wrapper';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Asterios Sub RB Calc</h1>\n     <Wrapper />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}