{"version":3,"sources":["logo.svg","components/Timer/useCountdown.js","components/Timer/Timer.jsx","components/RaidBossCalculator/RaidBossCalculator.jsx","components/RaidBossCalculator/useDistance.js","assets/hallate.png","assets/kernon.jpg","assets/cabrio.jpg","assets/golkonda.jpg","components/Wrapper/Wrapper.jsx","App.js","reportWebVitals.js","index.js"],"names":["getReturnValues","countdown","Math","floor","Timer","title","targetDate","useState","countdownDate","Date","getTime","setCountdown","useEffect","interval","setInterval","clearInterval","useCountdown","days","hours","minutes","seconds","className","RaidBossCalculator","boss","isRespIsComing","setIsRespIsComing","defaultTime","useMemo","addHours","minTime","setMinTime","maxTime","setMaxTime","useDistance","published","now","intl","Intl","DateTimeFormat","month","day","hour","minute","second","hour12","name","format","Wrapper","isLoaded","setIsLoaded","error","setError","bossInfo","setBossInfo","bossNames","img","golkonda","address","extraInfo","hallate","kernon","cabrio","read","then","res","filterFeed","feed","entries","rx","RegExp","map","x","join","bosses","forEach","entry","match","matchedBoss","find","push","bossLists","Object","values","groupBy","finalList","i","length","maxBy","message","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.bc01ab43.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useEffect, useState } from 'react'\r\n\r\n\r\nconst useCountdown = (targetDate) => {\r\n    const countdownDate = new Date(targetDate).getTime();\r\n    const [countdown, setCountdown] = useState(countdownDate - new Date().getTime())\r\n\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCountdown(countdownDate - new Date().getTime())\r\n            \r\n        }, 1000)\r\n        return () => clearInterval(interval)\r\n    }, [countdownDate])\r\n\r\n    return getReturnValues(countdown)\r\n}\r\n\r\nconst getReturnValues = (countdown) => {\r\n    const days = Math.floor(countdown / (1000 * 60 * 60 * 24));\r\n    const hours = Math.floor((countdown % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\r\n    const minutes = Math.floor((countdown % (1000 * 60 * 60)) / (1000 * 60))\r\n    const seconds = Math.floor((countdown % (1000 * 60)) / 1000);\r\n    return [days, hours, minutes, seconds]\r\n}\r\n\r\nexport { useCountdown }","\r\nimport React, { useState } from \"react\";\r\n\r\n\r\nimport './Timer.scss'\r\nimport { useCountdown } from \"./useCountdown\";\r\n\r\nconst Timer = ({\r\n    title,\r\n    targetDate\r\n}) => {\r\n\r\n    const [timer, setTimer] = useState('');\r\n\r\n    const [days, hours, minutes, seconds] = useCountdown(targetDate)\r\n\r\n\r\n    if (hours + minutes + seconds <= 0)\r\n        return (\r\n            <div className=\"expired\">\r\n                Точно реснулся\r\n            </div>\r\n        )\r\n    return (\r\n        <div className=\"container\">\r\n            <span>{title}</span>\r\n            <div className=\"beauty-timer\">\r\n                <div className=\"value\">\r\n                    <div className=\"number\">{days}</div>\r\n                    <div className=\"title\">дней</div>\r\n                </div>\r\n                <span>:</span>\r\n                <div className=\"value\">\r\n                    <div className=\"number\">{hours}</div>\r\n                    <div className=\"title\">часов</div>\r\n                </div>\r\n                <span>:</span>\r\n                <div className=\"value\">\r\n                    <div className=\"number\">{minutes}</div>\r\n                    <div className=\"title\">минут</div>\r\n                </div>\r\n                <span>:</span>\r\n                <div className=\"value\">\r\n                    <div className=\"number\">{seconds}</div>\r\n                    <div className=\"title\">секунд</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer","import React, { useEffect, useState } from \"react\";\r\n\r\nimport './RaidBossCalculator.scss'\r\nimport { useDistance } from \"./useDistance\";\r\nimport Timer from \"../Timer/Timer\";\r\nconst RaidBossCalculator = ({\r\n\tboss\r\n}) => {\r\n\r\n\tconst [isRespIsComing, setIsRespIsComing] = useState('before')\r\n\tconst [minTime, maxTime] = useDistance(boss.published)\r\n\tuseEffect(() => {\r\n\t\tconst now = new Date()\r\n\t\tsetIsRespIsComing(now > minTime)\r\n\t}, [minTime, maxTime])\r\n\tconst intl = new Intl.DateTimeFormat('RU-ru', {\r\n\t\tmonth: 'long',\r\n\t\tday: 'numeric',\r\n\t\thour: 'numeric',\r\n\t\tminute: 'numeric',\r\n\t\tsecond: 'numeric',\r\n\t\thour12: false\r\n\t})\r\n\t\r\n\treturn (\r\n\t\t<div className={`calculator__container ${isRespIsComing ? 'active' : 'inactive'} ${boss.name}`} >\r\n\t\t\r\n\t\t\t<div className={`boss__info `}>\r\n\t\t\t<h2 className=\"boss__name\">{boss.name}</h2>\r\n\t\t\t\t<span>Убит: {intl.format(new Date(boss.published))}</span>\r\n\t\t\t\t<span>Начало респа: {intl.format(minTime)}</span>\r\n\t\t\t\t<span>Конец респа: {intl.format(maxTime)}</span>\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tisRespIsComing ?\r\n\t\t\t\t\t\t(<Timer title=\"Респ идет. До конца: \" targetDate={maxTime} />) :\r\n\t\t\t\t\t\t(<Timer title=\"Респ не начался. До начала: \" targetDate={minTime} />)\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RaidBossCalculator","import { addHours } from 'date-fns'\r\nimport { useEffect, useState, useMemo } from 'react'\r\n\r\n\r\nconst useDistance = (targetDate) => {\r\n    const defaultTime = useMemo(()=>new Date(targetDate), [targetDate])\r\n    const minDelay = 18;\r\n    const maxDelay = 30;\r\n    const [minTime, setMinTime] = useState(addHours(defaultTime, minDelay))\r\n    const [maxTime, setMaxTime] = useState(addHours(defaultTime, maxDelay))\r\n    useEffect(() => {\r\n        setMinTime(addHours(defaultTime, minDelay))\r\n        setMaxTime(addHours(defaultTime, maxDelay))\r\n    }, [defaultTime])\r\n\r\n    return [minTime, maxTime]\r\n}\r\n\r\nexport { useDistance }","export default __webpack_public_path__ + \"static/media/hallate.d42d01e9.png\";","export default __webpack_public_path__ + \"static/media/kernon.a414e095.jpg\";","export default __webpack_public_path__ + \"static/media/cabrio.27124954.jpg\";","export default __webpack_public_path__ + \"static/media/golkonda.2b23cb84.jpg\";","import React, { useEffect, useState } from \"react\";\r\nimport RaidBossCalculator from \"../RaidBossCalculator/RaidBossCalculator\";\r\nimport { groupBy, maxBy } from \"lodash\";\r\nimport { read } from 'feed-reader'\r\nimport './Wrapper.scss'\r\n\r\nimport hallate from '../../assets/hallate.png'\r\nimport kernon from '../../assets/kernon.jpg'\r\nimport cabrio from '../../assets/cabrio.jpg'\r\nimport golkonda from '../../assets/golkonda.jpg'\r\n\r\nconst Wrapper = () => {\r\n\r\n  const [rss, setRss] = useState('');\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n  const [error, setError] = useState(null)\r\n  const [bossInfo, setBossInfo] = useState([]);\r\n  const bossNames = [\r\n    {\r\n      name:'Golkonda',\r\n      img: golkonda,\r\n      address: '',\r\n      extraInfo: ''\r\n    },\r\n    {\r\n      name:'Hallate',\r\n      img: hallate,\r\n      address: '',\r\n      extraInfo: ''\r\n    },\r\n    {\r\n      name:'Kernon',\r\n      img: kernon,\r\n      address: '',\r\n      extraInfo: ''\r\n    },\r\n    {\r\n      name:'Cabrio',\r\n      img: cabrio,\r\n      address: '',\r\n      extraInfo: ''\r\n    }]\r\n  \r\n  useEffect(() => {\r\n    const url = ' https://lit-badlands-25495.herokuapp.com/https://asterios.tm/index.php?cmd=rss&serv=3&filter=keyboss&out=xml'\r\n\r\n\r\n    read(url).then(res => {\r\n      setIsLoaded(true)\r\n      filterFeed(res, bossNames)\r\n    },\r\n      error => {\r\n        setIsLoaded(true)\r\n        setError(error)\r\n      })\r\n\r\n  }, [])\r\n\r\n  const filterFeed = (feed, bossNames) => {\r\n    const { entries } = feed\r\n    var rx = new RegExp(bossNames.map(x=>x.name).join('|'))\r\n    let bosses = []\r\n    entries.forEach(entry => {\r\n      const match = entry.title.match(rx)\r\n      if(match){\r\n        entry.name = match[0]\r\n        const matchedBoss = bossNames.find(x=>x.name === match[0])\r\n        entry.img = matchedBoss.img;\r\n        entry.address = matchedBoss.address\r\n        bosses.push(entry)\r\n      }\r\n    })\r\n    const bossLists = Object.values(groupBy(bosses, 'name'))\r\n    const finalList = []\r\n\r\n    for(let i = 0; i < bossLists.length; i++){\r\n      finalList.push(maxBy(bossLists[i],(x)=>{return new Date(x.published).getTime()}))\r\n    }\r\n\r\n    setBossInfo(finalList)\r\n  }\r\n  \r\n\r\n\r\n  if (!isLoaded)\r\n    return (\r\n      <h2>Loading</h2>\r\n    )\r\n  else if (error) {\r\n    return (\r\n      <div className=\"error\">\r\n        <h2>Error</h2>\r\n        <span> {error.message}</span>\r\n      </div>\r\n    )\r\n  }\r\n  else return (\r\n    <div className=\"wrapper\">\r\n    { \r\n      bossInfo.map(boss =>\r\n        (\r\n          <RaidBossCalculator key={boss.name} boss={boss} className=\"calc\" />\r\n        )\r\n      )\r\n    }\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Wrapper","import logo from './logo.svg';\nimport './App.scss';\nimport Wrapper from './components/Wrapper/Wrapper';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Asterios Sub RB Watcher</h1>\n     <Wrapper />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}