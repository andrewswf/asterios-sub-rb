{"version":3,"sources":["logo.svg","components/Timer/useCountdown.js","components/Timer/Timer.jsx","components/RaidBossCalculator/RaidBossCalculator.jsx","components/RaidBossCalculator/useDistance.js","components/Wrapper/Wrapper.jsx","App.js","reportWebVitals.js","index.js"],"names":["getReturnValues","countdown","Math","floor","Timer","title","targetDate","useState","countdownDate","Date","getTime","setCountdown","useEffect","interval","setInterval","clearInterval","useCountdown","days","hours","minutes","seconds","className","RaidBossCalculator","bossName","killedAt","isRespIsComing","setIsRespIsComing","defaultTime","useMemo","addHours","minTime","setMinTime","maxTime","setMaxTime","useDistance","now","intl","Intl","DateTimeFormat","month","day","hour","minute","second","hour12","format","Wrapper","isLoaded","setIsLoaded","error","setError","bossInfo","setBossInfo","bossNames","read","then","res","filterFeed","feed","bossIds","entries","rx","RegExp","join","bosses","forEach","entry","match","name","push","bossLists","Object","values","groupBy","finalList","i","length","maxBy","x","published","message","map","boss","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.f6e07ecb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useEffect, useState } from 'react'\r\n\r\n\r\nconst useCountdown = (targetDate) => {\r\n    const countdownDate = new Date(targetDate).getTime();\r\n    const [countdown, setCountdown] = useState(countdownDate - new Date().getTime())\r\n\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCountdown(countdownDate - new Date().getTime())\r\n            \r\n        }, 1000)\r\n        return () => clearInterval(interval)\r\n    }, [countdownDate])\r\n\r\n    return getReturnValues(countdown)\r\n}\r\n\r\nconst getReturnValues = (countdown) => {\r\n    const days = Math.floor(countdown / (1000 * 60 * 60 * 24));\r\n    const hours = Math.floor((countdown % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\r\n    const minutes = Math.floor((countdown % (1000 * 60 * 60)) / (1000 * 60))\r\n    const seconds = Math.floor((countdown % (1000 * 60)) / 1000);\r\n    return [days, hours, minutes, seconds]\r\n}\r\n\r\nexport { useCountdown }","\r\nimport React, { useState } from \"react\";\r\n\r\n\r\nimport './Timer.scss'\r\nimport { useCountdown } from \"./useCountdown\";\r\n\r\nconst Timer = ({\r\n    title,\r\n    targetDate\r\n}) => {\r\n\r\n    const [timer, setTimer] = useState('');\r\n\r\n    const [days, hours, minutes, seconds] = useCountdown(targetDate)\r\n\r\n\r\n    if (hours + minutes + seconds <= 0)\r\n        return (\r\n            <div className=\"expired\">\r\n                Точно реснулся\r\n            </div>\r\n        )\r\n    return (\r\n        <div className=\"container\">\r\n            <span>{title}</span>\r\n            <div className=\"beauty-timer\">\r\n                <div className=\"value\">\r\n                    <div className=\"number\">{days}</div>\r\n                    <div className=\"title\">дней</div>\r\n                </div>\r\n                <span>:</span>\r\n                <div className=\"value\">\r\n                    <div className=\"number\">{hours}</div>\r\n                    <div className=\"title\">часов</div>\r\n                </div>\r\n                <span>:</span>\r\n                <div className=\"value\">\r\n                    <div className=\"number\">{minutes}</div>\r\n                    <div className=\"title\">минут</div>\r\n                </div>\r\n                <span>:</span>\r\n                <div className=\"value\">\r\n                    <div className=\"number\">{seconds}</div>\r\n                    <div className=\"title\">секунд</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer","import React, { useEffect, useState } from \"react\";\r\nimport addHours from \"date-fns/addHours\";\r\n\r\nimport './RaidBossCalculator.scss'\r\nimport { useDistance } from \"./useDistance\";\r\nimport Timer from \"../Timer/Timer\";\r\nconst RaidBossCalculator = ({\r\n    bossName,\r\n    killedAt\r\n}) => {\r\n\r\n    const [isRespIsComing, setIsRespIsComing] = useState('before')\r\n    const [minTime, maxTime] = useDistance(killedAt)\r\n    useEffect(() => {\r\n        const now = new Date()\r\n        setIsRespIsComing(now > minTime )\r\n    }, [minTime, maxTime])\r\n    const intl = new Intl.DateTimeFormat('RU-ru', {\r\n        month: 'long',\r\n        day: 'numeric',\r\n        hour: 'numeric',\r\n        minute: 'numeric',\r\n        second: 'numeric',\r\n        hour12: false\r\n    })\r\n    return (\r\n        <div className={`calculator__container ${isRespIsComing ? 'active' : ''} `}>\r\n            <h2 className=\"boss__name\">{bossName}</h2>\r\n            <div className={`boss__info `}>\r\n                <span>Убит: {intl.format(new Date(killedAt))}</span>\r\n                <span>Начало респа: {intl.format(minTime)}</span>\r\n                <span>Конец респа: {intl.format(maxTime)}</span>\r\n\r\n                {\r\n                    isRespIsComing ?\r\n                        (<Timer title=\"Респ идет. До конца: \" targetDate={maxTime} />) :\r\n                        (<Timer title=\"Респ не начался. До начала: \" targetDate={minTime} />)\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RaidBossCalculator","import { addHours } from 'date-fns'\r\nimport { useEffect, useState, useMemo } from 'react'\r\n\r\n\r\nconst useDistance = (targetDate) => {\r\n    const defaultTime = useMemo(()=>new Date(targetDate), [targetDate])\r\n    const minDelay = 18;\r\n    const maxDelay = 30;\r\n    const [minTime, setMinTime] = useState(addHours(defaultTime, minDelay))\r\n    const [maxTime, setMaxTime] = useState(addHours(defaultTime, maxDelay))\r\n    useEffect(() => {\r\n        setMinTime(addHours(defaultTime, minDelay))\r\n        setMaxTime(addHours(defaultTime, maxDelay))\r\n    }, [defaultTime])\r\n\r\n    return [minTime, maxTime]\r\n}\r\n\r\nexport { useDistance }","import React, { useEffect, useState } from \"react\";\r\nimport RaidBossCalculator from \"../RaidBossCalculator/RaidBossCalculator\";\r\nimport { groupBy, maxBy } from \"lodash\";\r\nimport { read } from 'feed-reader'\r\nimport './Wrapper.scss'\r\nconst Wrapper = () => {\r\n\r\n  const [rss, setRss] = useState('');\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n  const [error, setError] = useState(null)\r\n  const [bossInfo, setBossInfo] = useState([]);\r\n  const bossNames = ['Golkonda','Hallate','Kernon','Cabrio']\r\n  \r\n  useEffect(() => {\r\n    const url = ' https://lit-badlands-25495.herokuapp.com/https://asterios.tm/index.php?cmd=rss&serv=3&filter=keyboss&out=xml'\r\n\r\n\r\n    read(url).then(res => {\r\n      setIsLoaded(true)\r\n      filterFeed(res, bossNames)\r\n    },\r\n      error => {\r\n        setIsLoaded(true)\r\n        setError(error)\r\n      })\r\n\r\n  }, [])\r\n\r\n  const filterFeed = (feed, bossIds) => {\r\n    const { entries } = feed\r\n    var rx = new RegExp(bossNames.join('|'))\r\n    let bosses = []\r\n    entries.forEach(entry => {\r\n      const match = entry.title.match(rx)\r\n      if(match){\r\n        entry.name = match[0]\r\n        bosses.push(entry)\r\n      }\r\n    })\r\n    const bossLists = Object.values(groupBy(bosses, 'name'))\r\n    const finalList = []\r\n\r\n    for(let i = 0; i < bossLists.length; i++){\r\n      finalList.push(maxBy(bossLists[i],(x)=>{return new Date(x.published).getTime()}))\r\n    }\r\n\r\n    setBossInfo(finalList)\r\n  }\r\n  \r\n\r\n\r\n  if (!isLoaded)\r\n    return (\r\n      <h2>Loading</h2>\r\n    )\r\n  else if (error) {\r\n    return (\r\n      <div className=\"error\">\r\n        <h2>Error</h2>\r\n        <span> {error.message}</span>\r\n      </div>\r\n    )\r\n  }\r\n  else return (\r\n    <div className=\"wrapper\">\r\n    { \r\n      bossInfo.map(boss =>\r\n        (\r\n          <RaidBossCalculator key={boss.name} bossName={boss.name} killedAt={boss.published} className=\"calc\" />\r\n        )\r\n      )\r\n    }\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Wrapper","import logo from './logo.svg';\nimport './App.scss';\nimport Wrapper from './components/Wrapper/Wrapper';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Asterios Sub RB Calc</h1>\n     <Wrapper />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}